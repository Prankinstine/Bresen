#include<windows.h>
#include <GL/glut.h>

// Window BIGGG!!!
const int WIDTH = 800;
const int HEIGHT = 600;

// Line Chaiyoo NII!!!
int x0, y0, x1, y1;

// Pixel kasle haldincha?
void setPixel(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

// Bresen Ham Burgirrr
void bresenhamLine(int x0, int y0, int x1, int y1) {
    int dx = abs(x1 - x0);
    int dy = abs(y1 - y0);
    int sx = (x0 < x1) ? 1 : -1;
    int sy = (y0 < y1) ? 1 : -1;
    int err = dx - dy;

    while (true) {
        setPixel(x0, y0);
        if (x0 == x1 && y0 == y1) break;
        int e2 = 2 * err;
        if (e2 > -dy) {
            err -= dy;
            x0 += sx;
        }
        if (e2 < dx) {
            err += dx;
            y0 += sy;
        }
    }
}

// Display callsback
void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    // Draw the line using the global variables
    bresenhamLine(x0, y0, x1, y1);

    glFlush();
}

// Initialization
void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0); // Background color
    glColor3f(1.0, 1.0, 1.0); // Drawing color
    glPointSize(2.0); // Point size
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0.0, WIDTH, 0.0, HEIGHT);
}

// Main part
int main(int argc, char** argv) {
    // Set the line coordinates within the code cuz thats how it goes
    x0 = 100;
    y0 = 100;
    x1 = 700;
    y1 = 500;

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(WIDTH, HEIGHT);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Bresenham's Line Algorithm");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
